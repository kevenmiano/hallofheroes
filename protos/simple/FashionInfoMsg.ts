// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.21.12
// source: simple/FashionInfoMsg.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "com.road.yishi.proto.simple";

export interface FashionInfoMsg {
  gp: number;
  grades: number;
  wingAvata: number;
  hatAvata: number;
  armAvata: number;
  clothAvata: number;
  isHidenWingAvata: boolean;
  isHidenHatAvat: boolean;
  isHidenArmAvata: boolean;
  isHidenClothAvata: boolean;
  dragonWingAvata: number;
  dragonHatAvata: number;
  dragonArmAvata: number;
  dragonClothAvata: number;
  isHidendDragonWingAvata: boolean;
  isHidenDragonHatAvat: boolean;
  isHidenDragonArmAvata: boolean;
  isHidenDragonClothAvata: boolean;
  defaultFashion: number;
  status: string;
}

function createBaseFashionInfoMsg(): FashionInfoMsg {
  return {
    gp: 0,
    grades: 0,
    wingAvata: 0,
    hatAvata: 0,
    armAvata: 0,
    clothAvata: 0,
    isHidenWingAvata: false,
    isHidenHatAvat: false,
    isHidenArmAvata: false,
    isHidenClothAvata: false,
    dragonWingAvata: 0,
    dragonHatAvata: 0,
    dragonArmAvata: 0,
    dragonClothAvata: 0,
    isHidendDragonWingAvata: false,
    isHidenDragonHatAvat: false,
    isHidenDragonArmAvata: false,
    isHidenDragonClothAvata: false,
    defaultFashion: 0,
    status: "",
  };
}

export const FashionInfoMsg: MessageFns<FashionInfoMsg> = {
  encode(message: FashionInfoMsg, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.gp !== 0) {
      writer.uint32(8).int32(message.gp);
    }
    if (message.grades !== 0) {
      writer.uint32(16).int32(message.grades);
    }
    if (message.wingAvata !== 0) {
      writer.uint32(24).int32(message.wingAvata);
    }
    if (message.hatAvata !== 0) {
      writer.uint32(32).int32(message.hatAvata);
    }
    if (message.armAvata !== 0) {
      writer.uint32(40).int32(message.armAvata);
    }
    if (message.clothAvata !== 0) {
      writer.uint32(48).int32(message.clothAvata);
    }
    if (message.isHidenWingAvata !== false) {
      writer.uint32(56).bool(message.isHidenWingAvata);
    }
    if (message.isHidenHatAvat !== false) {
      writer.uint32(64).bool(message.isHidenHatAvat);
    }
    if (message.isHidenArmAvata !== false) {
      writer.uint32(72).bool(message.isHidenArmAvata);
    }
    if (message.isHidenClothAvata !== false) {
      writer.uint32(80).bool(message.isHidenClothAvata);
    }
    if (message.dragonWingAvata !== 0) {
      writer.uint32(88).int32(message.dragonWingAvata);
    }
    if (message.dragonHatAvata !== 0) {
      writer.uint32(96).int32(message.dragonHatAvata);
    }
    if (message.dragonArmAvata !== 0) {
      writer.uint32(104).int32(message.dragonArmAvata);
    }
    if (message.dragonClothAvata !== 0) {
      writer.uint32(112).int32(message.dragonClothAvata);
    }
    if (message.isHidendDragonWingAvata !== false) {
      writer.uint32(120).bool(message.isHidendDragonWingAvata);
    }
    if (message.isHidenDragonHatAvat !== false) {
      writer.uint32(128).bool(message.isHidenDragonHatAvat);
    }
    if (message.isHidenDragonArmAvata !== false) {
      writer.uint32(136).bool(message.isHidenDragonArmAvata);
    }
    if (message.isHidenDragonClothAvata !== false) {
      writer.uint32(144).bool(message.isHidenDragonClothAvata);
    }
    if (message.defaultFashion !== 0) {
      writer.uint32(152).int32(message.defaultFashion);
    }
    if (message.status !== "") {
      writer.uint32(162).string(message.status);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): FashionInfoMsg {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseFashionInfoMsg();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.gp = reader.int32();
          continue;
        }
        case 2: {
          if (tag !== 16) {
            break;
          }

          message.grades = reader.int32();
          continue;
        }
        case 3: {
          if (tag !== 24) {
            break;
          }

          message.wingAvata = reader.int32();
          continue;
        }
        case 4: {
          if (tag !== 32) {
            break;
          }

          message.hatAvata = reader.int32();
          continue;
        }
        case 5: {
          if (tag !== 40) {
            break;
          }

          message.armAvata = reader.int32();
          continue;
        }
        case 6: {
          if (tag !== 48) {
            break;
          }

          message.clothAvata = reader.int32();
          continue;
        }
        case 7: {
          if (tag !== 56) {
            break;
          }

          message.isHidenWingAvata = reader.bool();
          continue;
        }
        case 8: {
          if (tag !== 64) {
            break;
          }

          message.isHidenHatAvat = reader.bool();
          continue;
        }
        case 9: {
          if (tag !== 72) {
            break;
          }

          message.isHidenArmAvata = reader.bool();
          continue;
        }
        case 10: {
          if (tag !== 80) {
            break;
          }

          message.isHidenClothAvata = reader.bool();
          continue;
        }
        case 11: {
          if (tag !== 88) {
            break;
          }

          message.dragonWingAvata = reader.int32();
          continue;
        }
        case 12: {
          if (tag !== 96) {
            break;
          }

          message.dragonHatAvata = reader.int32();
          continue;
        }
        case 13: {
          if (tag !== 104) {
            break;
          }

          message.dragonArmAvata = reader.int32();
          continue;
        }
        case 14: {
          if (tag !== 112) {
            break;
          }

          message.dragonClothAvata = reader.int32();
          continue;
        }
        case 15: {
          if (tag !== 120) {
            break;
          }

          message.isHidendDragonWingAvata = reader.bool();
          continue;
        }
        case 16: {
          if (tag !== 128) {
            break;
          }

          message.isHidenDragonHatAvat = reader.bool();
          continue;
        }
        case 17: {
          if (tag !== 136) {
            break;
          }

          message.isHidenDragonArmAvata = reader.bool();
          continue;
        }
        case 18: {
          if (tag !== 144) {
            break;
          }

          message.isHidenDragonClothAvata = reader.bool();
          continue;
        }
        case 19: {
          if (tag !== 152) {
            break;
          }

          message.defaultFashion = reader.int32();
          continue;
        }
        case 20: {
          if (tag !== 162) {
            break;
          }

          message.status = reader.string();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): FashionInfoMsg {
    return {
      gp: isSet(object.gp) ? globalThis.Number(object.gp) : 0,
      grades: isSet(object.grades) ? globalThis.Number(object.grades) : 0,
      wingAvata: isSet(object.wingAvata) ? globalThis.Number(object.wingAvata) : 0,
      hatAvata: isSet(object.hatAvata) ? globalThis.Number(object.hatAvata) : 0,
      armAvata: isSet(object.armAvata) ? globalThis.Number(object.armAvata) : 0,
      clothAvata: isSet(object.clothAvata) ? globalThis.Number(object.clothAvata) : 0,
      isHidenWingAvata: isSet(object.isHidenWingAvata) ? globalThis.Boolean(object.isHidenWingAvata) : false,
      isHidenHatAvat: isSet(object.isHidenHatAvat) ? globalThis.Boolean(object.isHidenHatAvat) : false,
      isHidenArmAvata: isSet(object.isHidenArmAvata) ? globalThis.Boolean(object.isHidenArmAvata) : false,
      isHidenClothAvata: isSet(object.isHidenClothAvata) ? globalThis.Boolean(object.isHidenClothAvata) : false,
      dragonWingAvata: isSet(object.dragonWingAvata) ? globalThis.Number(object.dragonWingAvata) : 0,
      dragonHatAvata: isSet(object.dragonHatAvata) ? globalThis.Number(object.dragonHatAvata) : 0,
      dragonArmAvata: isSet(object.dragonArmAvata) ? globalThis.Number(object.dragonArmAvata) : 0,
      dragonClothAvata: isSet(object.dragonClothAvata) ? globalThis.Number(object.dragonClothAvata) : 0,
      isHidendDragonWingAvata: isSet(object.isHidendDragonWingAvata)
        ? globalThis.Boolean(object.isHidendDragonWingAvata)
        : false,
      isHidenDragonHatAvat: isSet(object.isHidenDragonHatAvat)
        ? globalThis.Boolean(object.isHidenDragonHatAvat)
        : false,
      isHidenDragonArmAvata: isSet(object.isHidenDragonArmAvata)
        ? globalThis.Boolean(object.isHidenDragonArmAvata)
        : false,
      isHidenDragonClothAvata: isSet(object.isHidenDragonClothAvata)
        ? globalThis.Boolean(object.isHidenDragonClothAvata)
        : false,
      defaultFashion: isSet(object.defaultFashion) ? globalThis.Number(object.defaultFashion) : 0,
      status: isSet(object.status) ? globalThis.String(object.status) : "",
    };
  },

  toJSON(message: FashionInfoMsg): unknown {
    const obj: any = {};
    if (message.gp !== 0) {
      obj.gp = Math.round(message.gp);
    }
    if (message.grades !== 0) {
      obj.grades = Math.round(message.grades);
    }
    if (message.wingAvata !== 0) {
      obj.wingAvata = Math.round(message.wingAvata);
    }
    if (message.hatAvata !== 0) {
      obj.hatAvata = Math.round(message.hatAvata);
    }
    if (message.armAvata !== 0) {
      obj.armAvata = Math.round(message.armAvata);
    }
    if (message.clothAvata !== 0) {
      obj.clothAvata = Math.round(message.clothAvata);
    }
    if (message.isHidenWingAvata !== false) {
      obj.isHidenWingAvata = message.isHidenWingAvata;
    }
    if (message.isHidenHatAvat !== false) {
      obj.isHidenHatAvat = message.isHidenHatAvat;
    }
    if (message.isHidenArmAvata !== false) {
      obj.isHidenArmAvata = message.isHidenArmAvata;
    }
    if (message.isHidenClothAvata !== false) {
      obj.isHidenClothAvata = message.isHidenClothAvata;
    }
    if (message.dragonWingAvata !== 0) {
      obj.dragonWingAvata = Math.round(message.dragonWingAvata);
    }
    if (message.dragonHatAvata !== 0) {
      obj.dragonHatAvata = Math.round(message.dragonHatAvata);
    }
    if (message.dragonArmAvata !== 0) {
      obj.dragonArmAvata = Math.round(message.dragonArmAvata);
    }
    if (message.dragonClothAvata !== 0) {
      obj.dragonClothAvata = Math.round(message.dragonClothAvata);
    }
    if (message.isHidendDragonWingAvata !== false) {
      obj.isHidendDragonWingAvata = message.isHidendDragonWingAvata;
    }
    if (message.isHidenDragonHatAvat !== false) {
      obj.isHidenDragonHatAvat = message.isHidenDragonHatAvat;
    }
    if (message.isHidenDragonArmAvata !== false) {
      obj.isHidenDragonArmAvata = message.isHidenDragonArmAvata;
    }
    if (message.isHidenDragonClothAvata !== false) {
      obj.isHidenDragonClothAvata = message.isHidenDragonClothAvata;
    }
    if (message.defaultFashion !== 0) {
      obj.defaultFashion = Math.round(message.defaultFashion);
    }
    if (message.status !== "") {
      obj.status = message.status;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<FashionInfoMsg>, I>>(base?: I): FashionInfoMsg {
    return FashionInfoMsg.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<FashionInfoMsg>, I>>(object: I): FashionInfoMsg {
    const message = createBaseFashionInfoMsg();
    message.gp = object.gp ?? 0;
    message.grades = object.grades ?? 0;
    message.wingAvata = object.wingAvata ?? 0;
    message.hatAvata = object.hatAvata ?? 0;
    message.armAvata = object.armAvata ?? 0;
    message.clothAvata = object.clothAvata ?? 0;
    message.isHidenWingAvata = object.isHidenWingAvata ?? false;
    message.isHidenHatAvat = object.isHidenHatAvat ?? false;
    message.isHidenArmAvata = object.isHidenArmAvata ?? false;
    message.isHidenClothAvata = object.isHidenClothAvata ?? false;
    message.dragonWingAvata = object.dragonWingAvata ?? 0;
    message.dragonHatAvata = object.dragonHatAvata ?? 0;
    message.dragonArmAvata = object.dragonArmAvata ?? 0;
    message.dragonClothAvata = object.dragonClothAvata ?? 0;
    message.isHidendDragonWingAvata = object.isHidendDragonWingAvata ?? false;
    message.isHidenDragonHatAvat = object.isHidenDragonHatAvat ?? false;
    message.isHidenDragonArmAvata = object.isHidenDragonArmAvata ?? false;
    message.isHidenDragonClothAvata = object.isHidenDragonClothAvata ?? false;
    message.defaultFashion = object.defaultFashion ?? 0;
    message.status = object.status ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
