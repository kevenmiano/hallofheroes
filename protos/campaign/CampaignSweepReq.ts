// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.21.12
// source: campaign/CampaignSweepReq.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "com.road.yishi.proto.campaign";

export interface CampaignSweepReq {
  sweepType: number;
  opType: number;
  campaignId: number;
  count: number;
  eIndex: number;
  enterType: number;
  openSilverBox: boolean;
  openSecretBox: boolean;
  payType: number;
}

function createBaseCampaignSweepReq(): CampaignSweepReq {
  return {
    sweepType: 0,
    opType: 0,
    campaignId: 0,
    count: 0,
    eIndex: 0,
    enterType: 0,
    openSilverBox: false,
    openSecretBox: false,
    payType: 0,
  };
}

export const CampaignSweepReq: MessageFns<CampaignSweepReq> = {
  encode(message: CampaignSweepReq, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.sweepType !== 0) {
      writer.uint32(8).int32(message.sweepType);
    }
    if (message.opType !== 0) {
      writer.uint32(16).int32(message.opType);
    }
    if (message.campaignId !== 0) {
      writer.uint32(24).int32(message.campaignId);
    }
    if (message.count !== 0) {
      writer.uint32(32).int32(message.count);
    }
    if (message.eIndex !== 0) {
      writer.uint32(40).int32(message.eIndex);
    }
    if (message.enterType !== 0) {
      writer.uint32(48).int32(message.enterType);
    }
    if (message.openSilverBox !== false) {
      writer.uint32(56).bool(message.openSilverBox);
    }
    if (message.openSecretBox !== false) {
      writer.uint32(64).bool(message.openSecretBox);
    }
    if (message.payType !== 0) {
      writer.uint32(72).int32(message.payType);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CampaignSweepReq {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCampaignSweepReq();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.sweepType = reader.int32();
          continue;
        }
        case 2: {
          if (tag !== 16) {
            break;
          }

          message.opType = reader.int32();
          continue;
        }
        case 3: {
          if (tag !== 24) {
            break;
          }

          message.campaignId = reader.int32();
          continue;
        }
        case 4: {
          if (tag !== 32) {
            break;
          }

          message.count = reader.int32();
          continue;
        }
        case 5: {
          if (tag !== 40) {
            break;
          }

          message.eIndex = reader.int32();
          continue;
        }
        case 6: {
          if (tag !== 48) {
            break;
          }

          message.enterType = reader.int32();
          continue;
        }
        case 7: {
          if (tag !== 56) {
            break;
          }

          message.openSilverBox = reader.bool();
          continue;
        }
        case 8: {
          if (tag !== 64) {
            break;
          }

          message.openSecretBox = reader.bool();
          continue;
        }
        case 9: {
          if (tag !== 72) {
            break;
          }

          message.payType = reader.int32();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CampaignSweepReq {
    return {
      sweepType: isSet(object.sweepType) ? globalThis.Number(object.sweepType) : 0,
      opType: isSet(object.opType) ? globalThis.Number(object.opType) : 0,
      campaignId: isSet(object.campaignId) ? globalThis.Number(object.campaignId) : 0,
      count: isSet(object.count) ? globalThis.Number(object.count) : 0,
      eIndex: isSet(object.eIndex) ? globalThis.Number(object.eIndex) : 0,
      enterType: isSet(object.enterType) ? globalThis.Number(object.enterType) : 0,
      openSilverBox: isSet(object.openSilverBox) ? globalThis.Boolean(object.openSilverBox) : false,
      openSecretBox: isSet(object.openSecretBox) ? globalThis.Boolean(object.openSecretBox) : false,
      payType: isSet(object.payType) ? globalThis.Number(object.payType) : 0,
    };
  },

  toJSON(message: CampaignSweepReq): unknown {
    const obj: any = {};
    if (message.sweepType !== 0) {
      obj.sweepType = Math.round(message.sweepType);
    }
    if (message.opType !== 0) {
      obj.opType = Math.round(message.opType);
    }
    if (message.campaignId !== 0) {
      obj.campaignId = Math.round(message.campaignId);
    }
    if (message.count !== 0) {
      obj.count = Math.round(message.count);
    }
    if (message.eIndex !== 0) {
      obj.eIndex = Math.round(message.eIndex);
    }
    if (message.enterType !== 0) {
      obj.enterType = Math.round(message.enterType);
    }
    if (message.openSilverBox !== false) {
      obj.openSilverBox = message.openSilverBox;
    }
    if (message.openSecretBox !== false) {
      obj.openSecretBox = message.openSecretBox;
    }
    if (message.payType !== 0) {
      obj.payType = Math.round(message.payType);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<CampaignSweepReq>, I>>(base?: I): CampaignSweepReq {
    return CampaignSweepReq.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<CampaignSweepReq>, I>>(object: I): CampaignSweepReq {
    const message = createBaseCampaignSweepReq();
    message.sweepType = object.sweepType ?? 0;
    message.opType = object.opType ?? 0;
    message.campaignId = object.campaignId ?? 0;
    message.count = object.count ?? 0;
    message.eIndex = object.eIndex ?? 0;
    message.enterType = object.enterType ?? 0;
    message.openSilverBox = object.openSilverBox ?? false;
    message.openSecretBox = object.openSecretBox ?? false;
    message.payType = object.payType ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
