// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.21.12
// source: shop/MainDiscountInfo.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "com.road.yishi.proto.shop";

export interface MainDiscountInfo {
  id: number;
  site: number;
  shopId: number;
  templateId: number;
  counts: number;
  shopId1: number;
  templateId1: number;
  count1: number;
  shopId2: number;
  templateId2: number;
  count2: number;
  shopId3: number;
  templateId3: number;
  count3: number;
  shopId4: number;
  templateId4: number;
  count4: number;
  shopId5: number;
  templateId5: number;
  count5: number;
  shopId6: number;
  templateId6: number;
  count6: number;
  shopId7: number;
  templateId7: number;
  count7: number;
  shopId8: number;
  templateId8: number;
  count8: number;
  sortId: number;
  discount: number;
  beginDate: string;
  endDate: string;
  oneDayCount: number;
  maxCount: number;
  currentCount: number;
  maxCurrentDate: string;
  isGift: boolean;
  url: string;
  names: string;
  price: number;
  type: number;
  limitCount: number;
  vip: number;
}

function createBaseMainDiscountInfo(): MainDiscountInfo {
  return {
    id: 0,
    site: 0,
    shopId: 0,
    templateId: 0,
    counts: 0,
    shopId1: 0,
    templateId1: 0,
    count1: 0,
    shopId2: 0,
    templateId2: 0,
    count2: 0,
    shopId3: 0,
    templateId3: 0,
    count3: 0,
    shopId4: 0,
    templateId4: 0,
    count4: 0,
    shopId5: 0,
    templateId5: 0,
    count5: 0,
    shopId6: 0,
    templateId6: 0,
    count6: 0,
    shopId7: 0,
    templateId7: 0,
    count7: 0,
    shopId8: 0,
    templateId8: 0,
    count8: 0,
    sortId: 0,
    discount: 0,
    beginDate: "",
    endDate: "",
    oneDayCount: 0,
    maxCount: 0,
    currentCount: 0,
    maxCurrentDate: "",
    isGift: false,
    url: "",
    names: "",
    price: 0,
    type: 0,
    limitCount: 0,
    vip: 0,
  };
}

export const MainDiscountInfo: MessageFns<MainDiscountInfo> = {
  encode(message: MainDiscountInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.id !== 0) {
      writer.uint32(8).int32(message.id);
    }
    if (message.site !== 0) {
      writer.uint32(16).int32(message.site);
    }
    if (message.shopId !== 0) {
      writer.uint32(24).int32(message.shopId);
    }
    if (message.templateId !== 0) {
      writer.uint32(32).int32(message.templateId);
    }
    if (message.counts !== 0) {
      writer.uint32(40).int32(message.counts);
    }
    if (message.shopId1 !== 0) {
      writer.uint32(48).int32(message.shopId1);
    }
    if (message.templateId1 !== 0) {
      writer.uint32(56).int32(message.templateId1);
    }
    if (message.count1 !== 0) {
      writer.uint32(64).int32(message.count1);
    }
    if (message.shopId2 !== 0) {
      writer.uint32(72).int32(message.shopId2);
    }
    if (message.templateId2 !== 0) {
      writer.uint32(80).int32(message.templateId2);
    }
    if (message.count2 !== 0) {
      writer.uint32(88).int32(message.count2);
    }
    if (message.shopId3 !== 0) {
      writer.uint32(96).int32(message.shopId3);
    }
    if (message.templateId3 !== 0) {
      writer.uint32(104).int32(message.templateId3);
    }
    if (message.count3 !== 0) {
      writer.uint32(112).int32(message.count3);
    }
    if (message.shopId4 !== 0) {
      writer.uint32(120).int32(message.shopId4);
    }
    if (message.templateId4 !== 0) {
      writer.uint32(128).int32(message.templateId4);
    }
    if (message.count4 !== 0) {
      writer.uint32(136).int32(message.count4);
    }
    if (message.shopId5 !== 0) {
      writer.uint32(144).int32(message.shopId5);
    }
    if (message.templateId5 !== 0) {
      writer.uint32(152).int32(message.templateId5);
    }
    if (message.count5 !== 0) {
      writer.uint32(160).int32(message.count5);
    }
    if (message.shopId6 !== 0) {
      writer.uint32(168).int32(message.shopId6);
    }
    if (message.templateId6 !== 0) {
      writer.uint32(176).int32(message.templateId6);
    }
    if (message.count6 !== 0) {
      writer.uint32(184).int32(message.count6);
    }
    if (message.shopId7 !== 0) {
      writer.uint32(192).int32(message.shopId7);
    }
    if (message.templateId7 !== 0) {
      writer.uint32(200).int32(message.templateId7);
    }
    if (message.count7 !== 0) {
      writer.uint32(208).int32(message.count7);
    }
    if (message.shopId8 !== 0) {
      writer.uint32(216).int32(message.shopId8);
    }
    if (message.templateId8 !== 0) {
      writer.uint32(224).int32(message.templateId8);
    }
    if (message.count8 !== 0) {
      writer.uint32(232).int32(message.count8);
    }
    if (message.sortId !== 0) {
      writer.uint32(240).int32(message.sortId);
    }
    if (message.discount !== 0) {
      writer.uint32(248).int32(message.discount);
    }
    if (message.beginDate !== "") {
      writer.uint32(258).string(message.beginDate);
    }
    if (message.endDate !== "") {
      writer.uint32(266).string(message.endDate);
    }
    if (message.oneDayCount !== 0) {
      writer.uint32(272).int32(message.oneDayCount);
    }
    if (message.maxCount !== 0) {
      writer.uint32(280).int32(message.maxCount);
    }
    if (message.currentCount !== 0) {
      writer.uint32(288).int32(message.currentCount);
    }
    if (message.maxCurrentDate !== "") {
      writer.uint32(298).string(message.maxCurrentDate);
    }
    if (message.isGift !== false) {
      writer.uint32(304).bool(message.isGift);
    }
    if (message.url !== "") {
      writer.uint32(314).string(message.url);
    }
    if (message.names !== "") {
      writer.uint32(322).string(message.names);
    }
    if (message.price !== 0) {
      writer.uint32(328).int32(message.price);
    }
    if (message.type !== 0) {
      writer.uint32(336).int32(message.type);
    }
    if (message.limitCount !== 0) {
      writer.uint32(344).int32(message.limitCount);
    }
    if (message.vip !== 0) {
      writer.uint32(352).int32(message.vip);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): MainDiscountInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMainDiscountInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.id = reader.int32();
          continue;
        }
        case 2: {
          if (tag !== 16) {
            break;
          }

          message.site = reader.int32();
          continue;
        }
        case 3: {
          if (tag !== 24) {
            break;
          }

          message.shopId = reader.int32();
          continue;
        }
        case 4: {
          if (tag !== 32) {
            break;
          }

          message.templateId = reader.int32();
          continue;
        }
        case 5: {
          if (tag !== 40) {
            break;
          }

          message.counts = reader.int32();
          continue;
        }
        case 6: {
          if (tag !== 48) {
            break;
          }

          message.shopId1 = reader.int32();
          continue;
        }
        case 7: {
          if (tag !== 56) {
            break;
          }

          message.templateId1 = reader.int32();
          continue;
        }
        case 8: {
          if (tag !== 64) {
            break;
          }

          message.count1 = reader.int32();
          continue;
        }
        case 9: {
          if (tag !== 72) {
            break;
          }

          message.shopId2 = reader.int32();
          continue;
        }
        case 10: {
          if (tag !== 80) {
            break;
          }

          message.templateId2 = reader.int32();
          continue;
        }
        case 11: {
          if (tag !== 88) {
            break;
          }

          message.count2 = reader.int32();
          continue;
        }
        case 12: {
          if (tag !== 96) {
            break;
          }

          message.shopId3 = reader.int32();
          continue;
        }
        case 13: {
          if (tag !== 104) {
            break;
          }

          message.templateId3 = reader.int32();
          continue;
        }
        case 14: {
          if (tag !== 112) {
            break;
          }

          message.count3 = reader.int32();
          continue;
        }
        case 15: {
          if (tag !== 120) {
            break;
          }

          message.shopId4 = reader.int32();
          continue;
        }
        case 16: {
          if (tag !== 128) {
            break;
          }

          message.templateId4 = reader.int32();
          continue;
        }
        case 17: {
          if (tag !== 136) {
            break;
          }

          message.count4 = reader.int32();
          continue;
        }
        case 18: {
          if (tag !== 144) {
            break;
          }

          message.shopId5 = reader.int32();
          continue;
        }
        case 19: {
          if (tag !== 152) {
            break;
          }

          message.templateId5 = reader.int32();
          continue;
        }
        case 20: {
          if (tag !== 160) {
            break;
          }

          message.count5 = reader.int32();
          continue;
        }
        case 21: {
          if (tag !== 168) {
            break;
          }

          message.shopId6 = reader.int32();
          continue;
        }
        case 22: {
          if (tag !== 176) {
            break;
          }

          message.templateId6 = reader.int32();
          continue;
        }
        case 23: {
          if (tag !== 184) {
            break;
          }

          message.count6 = reader.int32();
          continue;
        }
        case 24: {
          if (tag !== 192) {
            break;
          }

          message.shopId7 = reader.int32();
          continue;
        }
        case 25: {
          if (tag !== 200) {
            break;
          }

          message.templateId7 = reader.int32();
          continue;
        }
        case 26: {
          if (tag !== 208) {
            break;
          }

          message.count7 = reader.int32();
          continue;
        }
        case 27: {
          if (tag !== 216) {
            break;
          }

          message.shopId8 = reader.int32();
          continue;
        }
        case 28: {
          if (tag !== 224) {
            break;
          }

          message.templateId8 = reader.int32();
          continue;
        }
        case 29: {
          if (tag !== 232) {
            break;
          }

          message.count8 = reader.int32();
          continue;
        }
        case 30: {
          if (tag !== 240) {
            break;
          }

          message.sortId = reader.int32();
          continue;
        }
        case 31: {
          if (tag !== 248) {
            break;
          }

          message.discount = reader.int32();
          continue;
        }
        case 32: {
          if (tag !== 258) {
            break;
          }

          message.beginDate = reader.string();
          continue;
        }
        case 33: {
          if (tag !== 266) {
            break;
          }

          message.endDate = reader.string();
          continue;
        }
        case 34: {
          if (tag !== 272) {
            break;
          }

          message.oneDayCount = reader.int32();
          continue;
        }
        case 35: {
          if (tag !== 280) {
            break;
          }

          message.maxCount = reader.int32();
          continue;
        }
        case 36: {
          if (tag !== 288) {
            break;
          }

          message.currentCount = reader.int32();
          continue;
        }
        case 37: {
          if (tag !== 298) {
            break;
          }

          message.maxCurrentDate = reader.string();
          continue;
        }
        case 38: {
          if (tag !== 304) {
            break;
          }

          message.isGift = reader.bool();
          continue;
        }
        case 39: {
          if (tag !== 314) {
            break;
          }

          message.url = reader.string();
          continue;
        }
        case 40: {
          if (tag !== 322) {
            break;
          }

          message.names = reader.string();
          continue;
        }
        case 41: {
          if (tag !== 328) {
            break;
          }

          message.price = reader.int32();
          continue;
        }
        case 42: {
          if (tag !== 336) {
            break;
          }

          message.type = reader.int32();
          continue;
        }
        case 43: {
          if (tag !== 344) {
            break;
          }

          message.limitCount = reader.int32();
          continue;
        }
        case 44: {
          if (tag !== 352) {
            break;
          }

          message.vip = reader.int32();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MainDiscountInfo {
    return {
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
      site: isSet(object.site) ? globalThis.Number(object.site) : 0,
      shopId: isSet(object.shopId) ? globalThis.Number(object.shopId) : 0,
      templateId: isSet(object.templateId) ? globalThis.Number(object.templateId) : 0,
      counts: isSet(object.counts) ? globalThis.Number(object.counts) : 0,
      shopId1: isSet(object.shopId1) ? globalThis.Number(object.shopId1) : 0,
      templateId1: isSet(object.templateId1) ? globalThis.Number(object.templateId1) : 0,
      count1: isSet(object.count1) ? globalThis.Number(object.count1) : 0,
      shopId2: isSet(object.shopId2) ? globalThis.Number(object.shopId2) : 0,
      templateId2: isSet(object.templateId2) ? globalThis.Number(object.templateId2) : 0,
      count2: isSet(object.count2) ? globalThis.Number(object.count2) : 0,
      shopId3: isSet(object.shopId3) ? globalThis.Number(object.shopId3) : 0,
      templateId3: isSet(object.templateId3) ? globalThis.Number(object.templateId3) : 0,
      count3: isSet(object.count3) ? globalThis.Number(object.count3) : 0,
      shopId4: isSet(object.shopId4) ? globalThis.Number(object.shopId4) : 0,
      templateId4: isSet(object.templateId4) ? globalThis.Number(object.templateId4) : 0,
      count4: isSet(object.count4) ? globalThis.Number(object.count4) : 0,
      shopId5: isSet(object.shopId5) ? globalThis.Number(object.shopId5) : 0,
      templateId5: isSet(object.templateId5) ? globalThis.Number(object.templateId5) : 0,
      count5: isSet(object.count5) ? globalThis.Number(object.count5) : 0,
      shopId6: isSet(object.shopId6) ? globalThis.Number(object.shopId6) : 0,
      templateId6: isSet(object.templateId6) ? globalThis.Number(object.templateId6) : 0,
      count6: isSet(object.count6) ? globalThis.Number(object.count6) : 0,
      shopId7: isSet(object.shopId7) ? globalThis.Number(object.shopId7) : 0,
      templateId7: isSet(object.templateId7) ? globalThis.Number(object.templateId7) : 0,
      count7: isSet(object.count7) ? globalThis.Number(object.count7) : 0,
      shopId8: isSet(object.shopId8) ? globalThis.Number(object.shopId8) : 0,
      templateId8: isSet(object.templateId8) ? globalThis.Number(object.templateId8) : 0,
      count8: isSet(object.count8) ? globalThis.Number(object.count8) : 0,
      sortId: isSet(object.sortId) ? globalThis.Number(object.sortId) : 0,
      discount: isSet(object.discount) ? globalThis.Number(object.discount) : 0,
      beginDate: isSet(object.beginDate) ? globalThis.String(object.beginDate) : "",
      endDate: isSet(object.endDate) ? globalThis.String(object.endDate) : "",
      oneDayCount: isSet(object.oneDayCount) ? globalThis.Number(object.oneDayCount) : 0,
      maxCount: isSet(object.maxCount) ? globalThis.Number(object.maxCount) : 0,
      currentCount: isSet(object.currentCount) ? globalThis.Number(object.currentCount) : 0,
      maxCurrentDate: isSet(object.maxCurrentDate) ? globalThis.String(object.maxCurrentDate) : "",
      isGift: isSet(object.isGift) ? globalThis.Boolean(object.isGift) : false,
      url: isSet(object.url) ? globalThis.String(object.url) : "",
      names: isSet(object.names) ? globalThis.String(object.names) : "",
      price: isSet(object.price) ? globalThis.Number(object.price) : 0,
      type: isSet(object.type) ? globalThis.Number(object.type) : 0,
      limitCount: isSet(object.limitCount) ? globalThis.Number(object.limitCount) : 0,
      vip: isSet(object.vip) ? globalThis.Number(object.vip) : 0,
    };
  },

  toJSON(message: MainDiscountInfo): unknown {
    const obj: any = {};
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    if (message.site !== 0) {
      obj.site = Math.round(message.site);
    }
    if (message.shopId !== 0) {
      obj.shopId = Math.round(message.shopId);
    }
    if (message.templateId !== 0) {
      obj.templateId = Math.round(message.templateId);
    }
    if (message.counts !== 0) {
      obj.counts = Math.round(message.counts);
    }
    if (message.shopId1 !== 0) {
      obj.shopId1 = Math.round(message.shopId1);
    }
    if (message.templateId1 !== 0) {
      obj.templateId1 = Math.round(message.templateId1);
    }
    if (message.count1 !== 0) {
      obj.count1 = Math.round(message.count1);
    }
    if (message.shopId2 !== 0) {
      obj.shopId2 = Math.round(message.shopId2);
    }
    if (message.templateId2 !== 0) {
      obj.templateId2 = Math.round(message.templateId2);
    }
    if (message.count2 !== 0) {
      obj.count2 = Math.round(message.count2);
    }
    if (message.shopId3 !== 0) {
      obj.shopId3 = Math.round(message.shopId3);
    }
    if (message.templateId3 !== 0) {
      obj.templateId3 = Math.round(message.templateId3);
    }
    if (message.count3 !== 0) {
      obj.count3 = Math.round(message.count3);
    }
    if (message.shopId4 !== 0) {
      obj.shopId4 = Math.round(message.shopId4);
    }
    if (message.templateId4 !== 0) {
      obj.templateId4 = Math.round(message.templateId4);
    }
    if (message.count4 !== 0) {
      obj.count4 = Math.round(message.count4);
    }
    if (message.shopId5 !== 0) {
      obj.shopId5 = Math.round(message.shopId5);
    }
    if (message.templateId5 !== 0) {
      obj.templateId5 = Math.round(message.templateId5);
    }
    if (message.count5 !== 0) {
      obj.count5 = Math.round(message.count5);
    }
    if (message.shopId6 !== 0) {
      obj.shopId6 = Math.round(message.shopId6);
    }
    if (message.templateId6 !== 0) {
      obj.templateId6 = Math.round(message.templateId6);
    }
    if (message.count6 !== 0) {
      obj.count6 = Math.round(message.count6);
    }
    if (message.shopId7 !== 0) {
      obj.shopId7 = Math.round(message.shopId7);
    }
    if (message.templateId7 !== 0) {
      obj.templateId7 = Math.round(message.templateId7);
    }
    if (message.count7 !== 0) {
      obj.count7 = Math.round(message.count7);
    }
    if (message.shopId8 !== 0) {
      obj.shopId8 = Math.round(message.shopId8);
    }
    if (message.templateId8 !== 0) {
      obj.templateId8 = Math.round(message.templateId8);
    }
    if (message.count8 !== 0) {
      obj.count8 = Math.round(message.count8);
    }
    if (message.sortId !== 0) {
      obj.sortId = Math.round(message.sortId);
    }
    if (message.discount !== 0) {
      obj.discount = Math.round(message.discount);
    }
    if (message.beginDate !== "") {
      obj.beginDate = message.beginDate;
    }
    if (message.endDate !== "") {
      obj.endDate = message.endDate;
    }
    if (message.oneDayCount !== 0) {
      obj.oneDayCount = Math.round(message.oneDayCount);
    }
    if (message.maxCount !== 0) {
      obj.maxCount = Math.round(message.maxCount);
    }
    if (message.currentCount !== 0) {
      obj.currentCount = Math.round(message.currentCount);
    }
    if (message.maxCurrentDate !== "") {
      obj.maxCurrentDate = message.maxCurrentDate;
    }
    if (message.isGift !== false) {
      obj.isGift = message.isGift;
    }
    if (message.url !== "") {
      obj.url = message.url;
    }
    if (message.names !== "") {
      obj.names = message.names;
    }
    if (message.price !== 0) {
      obj.price = Math.round(message.price);
    }
    if (message.type !== 0) {
      obj.type = Math.round(message.type);
    }
    if (message.limitCount !== 0) {
      obj.limitCount = Math.round(message.limitCount);
    }
    if (message.vip !== 0) {
      obj.vip = Math.round(message.vip);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MainDiscountInfo>, I>>(base?: I): MainDiscountInfo {
    return MainDiscountInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MainDiscountInfo>, I>>(object: I): MainDiscountInfo {
    const message = createBaseMainDiscountInfo();
    message.id = object.id ?? 0;
    message.site = object.site ?? 0;
    message.shopId = object.shopId ?? 0;
    message.templateId = object.templateId ?? 0;
    message.counts = object.counts ?? 0;
    message.shopId1 = object.shopId1 ?? 0;
    message.templateId1 = object.templateId1 ?? 0;
    message.count1 = object.count1 ?? 0;
    message.shopId2 = object.shopId2 ?? 0;
    message.templateId2 = object.templateId2 ?? 0;
    message.count2 = object.count2 ?? 0;
    message.shopId3 = object.shopId3 ?? 0;
    message.templateId3 = object.templateId3 ?? 0;
    message.count3 = object.count3 ?? 0;
    message.shopId4 = object.shopId4 ?? 0;
    message.templateId4 = object.templateId4 ?? 0;
    message.count4 = object.count4 ?? 0;
    message.shopId5 = object.shopId5 ?? 0;
    message.templateId5 = object.templateId5 ?? 0;
    message.count5 = object.count5 ?? 0;
    message.shopId6 = object.shopId6 ?? 0;
    message.templateId6 = object.templateId6 ?? 0;
    message.count6 = object.count6 ?? 0;
    message.shopId7 = object.shopId7 ?? 0;
    message.templateId7 = object.templateId7 ?? 0;
    message.count7 = object.count7 ?? 0;
    message.shopId8 = object.shopId8 ?? 0;
    message.templateId8 = object.templateId8 ?? 0;
    message.count8 = object.count8 ?? 0;
    message.sortId = object.sortId ?? 0;
    message.discount = object.discount ?? 0;
    message.beginDate = object.beginDate ?? "";
    message.endDate = object.endDate ?? "";
    message.oneDayCount = object.oneDayCount ?? 0;
    message.maxCount = object.maxCount ?? 0;
    message.currentCount = object.currentCount ?? 0;
    message.maxCurrentDate = object.maxCurrentDate ?? "";
    message.isGift = object.isGift ?? false;
    message.url = object.url ?? "";
    message.names = object.names ?? "";
    message.price = object.price ?? 0;
    message.type = object.type ?? 0;
    message.limitCount = object.limitCount ?? 0;
    message.vip = object.vip ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
